package com.vexempt.particles;

public class SingleDirectionChamber {

	private boolean[] hasParticle;
	private Direction direction;
	private int cursor = 0;
	
	public void init(String data, Direction direction) {

		this.direction = direction;
		//this.cursor = direction.equals(Direction.LEFT) ? data.length() - 1 : 0;
		hasParticle = new boolean[data.length()]; // all initially false
		for (int i = 0; i < data.length(); i++) {
			if (this.direction.equals(Direction.LEFT) && data.charAt(i) == 'L')
				hasParticle[i] = true;
			else if (this.direction.equals(Direction.RIGHT) && data.charAt(i) == 'R')
				hasParticle[i] = true;
		}
		
	}
	
	public void shift(int speed) {
		if (this.direction.equals(Direction.LEFT)) {
			for (int i = 0; i < speed; i++ ) {
				hasParticle[++cursor] = false;
				if (cursor > hasParticle.length - 1) cursor = 0;
			}
		} else {
			for (int i = 0; i < speed; i++ ) {
				hasParticle[cursor--] = false;
				if (cursor < 0) cursor = hasParticle.length - 1;
			}
		}
	}
	
	public boolean cellHasValue(int index) {
		index += cursor;
		if (index >= hasParticle.length) index -= hasParticle.length;
		return hasParticle[index];
	}
	
}
